/*
 * Zuora Copy
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.zuora.prototype.models;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Terms
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-20T00:16:03.519Z")



public class Terms {
  @SerializedName("autoRenew")
  private Boolean autoRenew = null;

  @SerializedName("initialTerm")
  private InitialTerm initialTerm = null;

  @SerializedName("renewalSetting")
  private String renewalSetting = null;

  @SerializedName("renewalTerms")
  private List<RenewalTerm> renewalTerms = new ArrayList<RenewalTerm>();

  public Terms autoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  public Terms initialTerm(InitialTerm initialTerm) {
    this.initialTerm = initialTerm;
    return this;
  }

   /**
   * Get initialTerm
   * @return initialTerm
  **/
  @ApiModelProperty(required = true, value = "")
  public InitialTerm getInitialTerm() {
    return initialTerm;
  }

  public void setInitialTerm(InitialTerm initialTerm) {
    this.initialTerm = initialTerm;
  }

  public Terms renewalSetting(String renewalSetting) {
    this.renewalSetting = renewalSetting;
    return this;
  }

   /**
   * Get renewalSetting
   * @return renewalSetting
  **/
  @ApiModelProperty(required = true, value = "")
  public String getRenewalSetting() {
    return renewalSetting;
  }

  public void setRenewalSetting(String renewalSetting) {
    this.renewalSetting = renewalSetting;
  }

  public Terms renewalTerms(List<RenewalTerm> renewalTerms) {
    this.renewalTerms = renewalTerms;
    return this;
  }

  public Terms addRenewalTermsItem(RenewalTerm renewalTermsItem) {
    this.renewalTerms.add(renewalTermsItem);
    return this;
  }

   /**
   * Get renewalTerms
   * @return renewalTerms
  **/
  @ApiModelProperty(required = true, value = "")
  public List<RenewalTerm> getRenewalTerms() {
    return renewalTerms;
  }

  public void setRenewalTerms(List<RenewalTerm> renewalTerms) {
    this.renewalTerms = renewalTerms;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Terms terms = (Terms) o;
    return Objects.equals(this.autoRenew, terms.autoRenew) &&
        Objects.equals(this.initialTerm, terms.initialTerm) &&
        Objects.equals(this.renewalSetting, terms.renewalSetting) &&
        Objects.equals(this.renewalTerms, terms.renewalTerms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRenew, initialTerm, renewalSetting, renewalTerms);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Terms {\n");
    
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    initialTerm: ").append(toIndentedString(initialTerm)).append("\n");
    sb.append("    renewalSetting: ").append(toIndentedString(renewalSetting)).append("\n");
    sb.append("    renewalTerms: ").append(toIndentedString(renewalTerms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

